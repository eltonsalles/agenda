/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.senac.tads.pi3a.ui;

import br.senac.tads.pi3a.service.ServicoDb;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import br.senac.tads.pi3a.model.Contato;
import br.senac.tads.pi3a.service.ServicoContato;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Fillipe Pinheiro
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        // Verifica a conexão com o banco de dados
        this.verificarConexao();
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jpContato = new javax.swing.JPanel();
        jpInfosPessoais = new javax.swing.JPanel();
        lblNome1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblDataNasc1 = new javax.swing.JLabel();
        txtDataNasc = new javax.swing.JFormattedTextField();
        jpInfosContato = new javax.swing.JPanel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        btSalvar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btIncluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtDataContato = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JTextField();
        bntBuscar = new javax.swing.JButton();
        jpLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbContatos = new javax.swing.JTable();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpContato.setBorder(javax.swing.BorderFactory.createTitledBorder("Contato"));

        jpInfosPessoais.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações pessoais"));

        lblNome1.setText("Nome:");

        lblDataNasc1.setText("Data de nascimento:");

        txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        javax.swing.GroupLayout jpInfosPessoaisLayout = new javax.swing.GroupLayout(jpInfosPessoais);
        jpInfosPessoais.setLayout(jpInfosPessoaisLayout);
        jpInfosPessoaisLayout.setHorizontalGroup(
            jpInfosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNome)
                .addGap(18, 18, 18)
                .addComponent(lblDataNasc1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpInfosPessoaisLayout.setVerticalGroup(
            jpInfosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfosPessoaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInfosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDataNasc1)
                        .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpInfosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNome1)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jpInfosContato.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações para contato"));

        lblEmail.setText("E-mail:");

        lblTelefone.setText("Telefone:");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jpInfosContatoLayout = new javax.swing.GroupLayout(jpInfosContato);
        jpInfosContato.setLayout(jpInfosContatoLayout);
        jpInfosContatoLayout.setHorizontalGroup(
            jpInfosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfosContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jpInfosContatoLayout.setVerticalGroup(
            jpInfosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfosContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefone))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/salvar.png"))); // NOI18N
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/alterar.png"))); // NOI18N
        btAlterar.setEnabled(false);
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/excluir.png"))); // NOI18N
        btExcluir.setEnabled(false);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/incluir.png"))); // NOI18N
        btIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Código:");

        jLabel2.setText("Data:");

        txtCodigo.setEditable(false);

        txtDataContato.setEditable(false);

        javax.swing.GroupLayout jpContatoLayout = new javax.swing.GroupLayout(jpContato);
        jpContato.setLayout(jpContatoLayout);
        jpContatoLayout.setHorizontalGroup(
            jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpContatoLayout.createSequentialGroup()
                        .addGroup(jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodigo)
                            .addComponent(txtDataContato, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpInfosPessoais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpInfosContato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpContatoLayout.setVerticalGroup(
            jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpInfosPessoais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpInfosContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpContatoLayout.createSequentialGroup()
                        .addGroup(jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDataContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        bntBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/pesquisar.png"))); // NOI18N
        bntBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntBuscarActionPerformed(evt);
            }
        });

        tbContatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbContatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbContatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbContatos);
        tbContatos.getAccessibleContext().setAccessibleParent(null);

        javax.swing.GroupLayout jpListaLayout = new javax.swing.GroupLayout(jpLista);
        jpLista.setLayout(jpListaLayout);
        jpListaLayout.setHorizontalGroup(
            jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jpListaLayout.setVerticalGroup(
            jpListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpContato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(bntBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void bntBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntBuscarActionPerformed
        List<Contato> listaContato = new ArrayList<>();
        Contato contato = null;

        try {

            if (txtBuscar.getText().trim().isEmpty()) {
                throw new Exception("Informe o nome do contato!");
            } else if (!validarTamanho(txtBuscar.getText(), 150)) {
                throw new Exception("Informe o nome do contato "
                        + "corretamente, o limite de caracteres é 150!");
            } else {
                listaContato = ServicoContato.consultarContatosPorNome(txtBuscar.getText());
            }

            if (contato == null && listaContato.isEmpty()) {
                JOptionPane.showMessageDialog(this, "A pesquisa não retornou "
                        + "nenhum resultado!", "Venda",
                        JOptionPane.WARNING_MESSAGE);
            } else {
                preencherTabela(listaContato);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bntBuscarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        try {
            Contato dados = validarDados(pegarDados());

            ServicoContato.cadastrar(dados);

            JOptionPane.showMessageDialog(this,
                    "Cadastro realizado com sucesso!",
                    "Contato", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        try {

            Contato dados = validarDados(pegarDados());

            ServicoContato.alterar(dados);

            JOptionPane.showMessageDialog(this, "Cadastro atualizado com "
                    + "sucesso!", "Contato", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        try {
            int yesNo = JOptionPane.showConfirmDialog(this, "Deseja "
                    + "excluir o contato " + txtNome.getText() + "?",
                    "Contato", JOptionPane.YES_NO_OPTION);

            if (yesNo == JOptionPane.YES_OPTION) {

                ServicoContato.excluir(Integer.parseInt(txtCodigo.getText()));

                JOptionPane.showMessageDialog(this, "Contato excluído com "
                        + "sucesso!",
                        "Contato", JOptionPane.INFORMATION_MESSAGE);

                limparDadosPreenchimento();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirActionPerformed
        try {
            
            limparDadosPreenchimento();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btIncluirActionPerformed

    private void tbContatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbContatosMouseClicked
        if (evt.getClickCount() == 2) {
            Contato contato;

            try {
                
                int row = tbContatos.getSelectedRow();

                int id = (int) tbContatos.getValueAt(row, 0);

                contato = ServicoContato.consultarContatoPorId(id);

                carregarDados(contato);
            
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_tbContatosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntBuscar;
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel jpContato;
    private javax.swing.JPanel jpInfosContato;
    private javax.swing.JPanel jpInfosPessoais;
    private javax.swing.JPanel jpLista;
    private javax.swing.JLabel lblDataNasc1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblNome1;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JTable tbContatos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDataContato;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
    /**
     *
     * @param dados
     * @return
     * @throws Exception
     */
    public static Contato validarDados(Map dados) throws Exception {
        String nome, email, telefone;
        Date dataNasc;

        nome = dados.get("nome").toString().replaceAll("[^a-z,A-Z ]*", "");
        if (nome.trim().isEmpty()) {
            throw new Exception("Informe o nome do contato!");
        } else if (!validarTamanho(nome, 150)) {
            throw new Exception("Informe o nome do contato "
                    + "corretamente, o limite de caracteres é 150!");
        }

        dataNasc = validarData(
                dados.get("dataNascimento").toString());
        if (dataNasc == null) {
            throw new Exception("Informe a data de nascimento do contato!");
        }

        email = dados.get("email").toString().toLowerCase();
        if (!email.trim().isEmpty()) {
            if (!validarTamanho(email, 150)) {
                throw new Exception("Informe o email do contato "
                        + "corretamente, o limite de caracteres é 150!");
            } else if (!validarEmail(email)) {
                throw new Exception("Informe um email válido!");
            }
        } else {
            email = null;
        }

        telefone = dados.get("telefone").toString().replaceAll("[^0-9]*", "");
        if (!telefone.trim().isEmpty()) {
            if (telefone.length() != 10) {
                throw new Exception("Informe o telefone do contato "
                        + "corretamente, o número de caracteres é 10!");
            }
        } else {
            throw new Exception("Informe o telefone do contato!");
        }

        Contato contato = new Contato(nome, dataNasc, telefone, email);

        return contato;

    }

    /**
     *
     * @param campo
     * @param tamanho
     * @return
     */
    public static boolean validarTamanho(String campo, int tamanho) {
        if (campo.length() > tamanho) {
            return false;
        }

        return true;
    }

    /**
     *
     * @param data
     * @return
     */
    public static Date validarData(String data) {
        Date dataValida, inicio, fim;
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        try {
            sdf.setLenient(false);
            dataValida = sdf.parse(data);
            inicio = sdf.parse("01/01/1900");
            fim = new Date();

            if (dataValida.after(inicio) && dataValida.before(fim)) {
                return dataValida;
            } else {
                return null;
            }
        } catch (Exception e) {
            return null;
        }
    }

    /**
     *
     * @param email
     * @return
     */
    public static boolean validarEmail(String email) {
        String emailPattern = "\\b(^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@"
                + "([A-Za-z0-9-])+(\\.[A-Za-z0-9-]+)*((\\.[A-Za-z0-9]{2,})|"
                + "(\\.[A-Za-z0-9]{2,}\\.[A-Za-z0-9]{2,}))$)\\b";
        Pattern pattern = Pattern.compile(emailPattern, Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(email);

        if (matcher.matches()) {
            return true;
        }

        return false;
    }

    /**
     *
     * @return
     */
    private Map pegarDados() {
        Map<String, String> dados = new HashMap<>();

        //Dados Pessoais
        dados.put("nome", txtNome.getText());
        dados.put("dataNascimento", txtDataNasc.getText());
        dados.put("telefone", txtTelefone.getText());
        dados.put("email", txtEmail.getText());

        return dados;
    }

    /**
     *
     * @param listaContatos
     */
    private void preencherTabela(List<Contato> listaContatos) {
        DefaultTableModel model = (DefaultTableModel) tbContatos.getModel();
        model.setRowCount(0);

        int size = listaContatos.size();

        for (int i = 0; i < size; i++) {
            Contato cont = listaContatos.get(i);

            if (cont != null) {
                Object[] row = new Object[1];
                row[0] = cont.getNome();

                model.addRow(row);
                
            }
        }
    }

    /**
     * Verifica se existe conexão com o banco de dados O sistema fica em um loop
     * infinito até conseguir se conectar ao banco ou o usuário encerrar a
     * aplicação
     */
    private void verificarConexao() {
        do {
            if (ServicoDb.verificarConexao()) {
                break;
            }

            int yesNo = JOptionPane.showConfirmDialog(rootPane, "Não foi "
                    + "possível estabelecer uma conexão com o "
                    + "banco de dados.\n\nDeseja tentar novamente?",
                    "Banco de Dados", JOptionPane.YES_NO_OPTION);

            if (yesNo == JOptionPane.NO_OPTION
                    || yesNo == JOptionPane.CLOSED_OPTION) {
                System.exit(0);
            }
        } while (true);
    }

    private void carregarDados(Contato contato) {
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
        btSalvar.setEnabled(false);
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false);
        
        txtNome.setText(contato.getNome());
        txtDataNasc.setText(sdf.format(contato.getDataNasc()));
        txtTelefone.setText(contato.getTelefone());
        txtEmail.setText(contato.getEmail());
        
    }
    
    private void limparDadosPreenchimento() {
        txtBuscar.setText(null);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        btSalvar.setEnabled(true);
        txtNome.setText(null);
        txtDataNasc.setText(null);
        txtTelefone.setText(null);
        txtEmail.setText(null);
        txtCodigo.setText(null);
        txtDataContato.setText(null);

    }
    
}
